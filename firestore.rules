
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // User profiles can be read by any authenticated user,
    // but only written to by the user themselves.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /conversations/{conversationId} {
      // Allow read if the user's UID is part of the conversationId string.
      // This lets the app check if a conversation exists without getting a permission error,
      // as it doesn't depend on the document's data (which is null if it doesn't exist).
      allow read: if request.auth != null && conversationId.matches('.*' + request.auth.uid + '.*');

      // Allow update ONLY if the user is a participant.
      // Here, the resource exists, so we can safely check the participantIds array in its data.
      allow update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      
      // Allow create if the user includes themself as a participant in the new document.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;
      
      // Messages can only be read/written by participants of the conversation.
      match /messages/{messageId} {
        // We use `get()` to securely check the parent conversation document for permissions.
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }
  }
}

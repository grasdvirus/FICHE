
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // USERS collection:
    // Anyone authenticated can read user profiles (to see names, etc.)
    // A user can only create or update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // CONVERSATIONS collection:
    match /conversations/{conversationId} {
      // A user can only GET a conversation document if they are a participant.
      allow get: if request.auth.uid in resource.data.participantIds;

      // A user can LIST conversations. The client-side query is responsible
      // for filtering to only show conversations for the current user.
      allow list: if request.auth != null;

      // A user can CREATE a conversation if their UID is in the new participant list.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // A user can UPDATE a conversation (e.g., to add a last message) if they are a participant.
      allow update: if request.auth.uid in resource.data.participantIds;

      // No one can delete conversations through the app.
      allow delete: if false;

      // MESSAGES sub-collection:
      match /messages/{messageId} {
        // A user can read/list messages only if they are a participant of the parent conversation.
        allow read: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;

        // A user can CREATE a message if they are the sender AND a participant of the conversation.
        allow create: if request.resource.data.senderId == request.auth.uid &&
                       request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // No
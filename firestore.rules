rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // User profiles: readable by auth'd users, writable only by owner.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Private conversations: only accessible by participants.
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }

    // Communities: readable/creatable by auth'd users.
    match /communities/{communityId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null; // Allows joining, changing description etc.
      allow delete: if request.auth.uid == resource.data.ownerId;
      
      match /messages/{messageId} {
        allow read: if request.auth != null;
        
        // A user can create a message if they are the sender.
        allow create: if request.auth.uid == request.resource.data.senderId;

        // A user can update a message (e.g. for read receipts).
        allow update: if request.auth != null;
        
        // Only the sender can delete their message.
        allow delete: if request.auth.uid == resource.data.senderId;
      }
    }
  }
}

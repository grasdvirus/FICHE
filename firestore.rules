
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Les profils des utilisateurs peuvent être lus par n'importe quel utilisateur authentifié,
    // mais seul le propriétaire peut écrire sur son propre profil.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Les conversations ne peuvent être lues ou mises à jour que par les participants.
    // La création est autorisée si l'utilisateur qui la crée fait partie des participants.
    match /conversations/{conversationId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;

      // Les messages d'une conversation peuvent être lus par les participants.
      // Un utilisateur ne peut créer que des messages en son nom propre et s'il est participant.
      match /messages/{messageId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        allow create: if request.auth != null 
                      && request.resource.data.senderId == request.auth.uid
                      && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }

    // Les communautés peuvent être lues/créées/mises à jour par tout utilisateur authentifié.
    // La suppression est réservée au propriétaire.
    match /communities/{communityId} {
      allow read, create, update: if request.auth != null;
      allow delete: if request.auth.uid == resource.data.ownerId;
    }
    
    // Les métadonnées des fichiers ne peuvent être lues/écrites que par leur propriétaire.
    match /files/{fileId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
  }
}
